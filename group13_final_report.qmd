---
title: "Unveiling NYC Taxi Patterns"
author: "Alan, Alicia, Ryan, Kyle"
date: "22 April 2024"
format:
  pdf:
    documentclass: article
    fontsize: 10pt
    geometry: margin=1in
    includes:
      in_header: header.tex
editor: visual
---

# Introduction

**Group Members**: Alan, Alicia, Ryan, Kyle

## Project Overview

New York City, renowned for its hustle and bustle, has a unique transportation landscape characterized by its efficient Taxi service. Our statistical analysis project explores a dataset of Taxi cab ride data from January to March 2021, aiming to uncover patterns in trip distances, fare prices, and more.

New York, the city that never sleeps, has a densely populated city, meaning not many people can own cars. However, if people need to travel from point A to point B in a hurry, they can hail a Taxi.

Group 13 will be analyzing the Taxi cab ride data from January to June of 2021 to detect any noticeable relationships between the columns of the dataset. For example, the relationship between trip distance and fare price, the most popular destinations to take a Taxi, the average trip time, and so on. In addition, Group 13 will also see if taxicab ride usage spikes during key events or holidays, such as MLK day.

## Data Overview

The dataset consists of 18 columns and approximately 30 million rows, representing individual taxi trips. Notable columns include pickup and dropoff times, trip distance, and fare amount, among others.

# Methodology

## Data Cleaning

Data cleaning steps included removing records outside the specified timeframe, filtering out trips under 10 seconds or with negative fees, and excluding trips lacking essential information like pickup or dropoff times.

```{r, echo = FALSE, message = FALSE, warning = FALSE}
options(bitmapType='cairo')
x11(type='cairo')
library(lubridate)
library(dplyr)
library(ggplot2)
library(shiny)
library(RSQLite)
library(DBI)
dcon <- dbConnect(SQLite(), dbname = "jan_to_mar_taxi_2021.db")
query <- "SELECT * FROM jan_to_mar_taxi_2021 WHERE trip_distance < 100;"
df <- dbGetQuery(dcon, query)
set.seed(24246452)
sampled_indices <- sample(nrow(df), size = 100000)

# Subset the DataFrame with the sampled indices
df <- df[sampled_indices, ]
```

```{r}
df$pickup_time <- as.POSIXct(df$pickup_time, format = "%m/%d/%Y %I:%M:%S %p")
df$day <- format(df$pickup_time, "%Y-%m-%d")
```

# Analysis/Commentary and Interpretation

## Plot1:

This is the main relationship we really looked at. Fare V Distance Traveled We are examining the relationship between the trip distance and the amount the person got charged for their fare using a scatterplot. We can see as the trip distance increases, the fare amount increases as well. This reveals a strong linear relationship between trip distance and fare amount.This suggests that there is a positive correlation between trip distance and fare amount. In other words, longer trips tend to result in higher fare amounts. The scatter plot provides a quick and intuitive way to observe the trend and relationship between these two variables.

```{r, echo = FALSE}
# Fit a linear model
lm_model <- lm(fare_amount ~ trip_distance, data = df)

# Extract coefficients
intercept <- round(coef(lm_model)[1], 2)
slope <- round(coef(lm_model)[2], 2)

# Construct the equation string
equation <- paste("y = ", intercept, " + ", slope, "*x", sep = "")

# Create the plot with ggplot2
ggplot(df, aes(x = trip_distance, y = fare_amount)) +
  geom_point(aes(color = trip_distance), alpha = 0.5) +  # Plot data points
  geom_smooth(method = "lm", formula = y ~ x, se = FALSE, color = "blue") +  # Linear regression line without standard error
  geom_text(x = Inf, y = Inf, label = equation, hjust = 1.1, vjust = 2, size = 5, color = "red") +  # Display the equation
  labs(title = "Trip Distance vs. Fare Amount",
       x = "Trip Distance (miles)",
       y = "Fare Amount ($)",
       caption = paste("Data: NYC Taxi Rides. Linear Model:", equation)) +
  theme_minimal() +
  theme(legend.position = "none")
```

## Plot2:

Plot2 is a violin plot used to visually compare fare distributions across different rate codes. This plot is essential for identifying patterns, outliers, and skewness in fare amounts. The inclusion of median points and labels highlights central tendencies within each rate code. Beyond analysis, the plot serves as a clear communication tool, aiding stakeholders in making informed decisions related to pricing strategies and operational planning based on observed fare variations. Rate Code IDs: 1. Standard rate 2. JFK 3. Newark 4. Nassau or Westchester 5. Negotiated fare 6. Group ride 99. Unknown

We know that: Standard Rate: The most common fare rate, applied to most metered trips within the city. JFK: A flat fare for trips between JFK Airport and Manhattan. This rate is set to offer a predictable fare for travelers to and from this major airport. Newark: A special fare rate for trips to Newark Liberty International Airport, which may include surcharges or a flat rate, depending on the jurisdictional agreements and regulations. Nassau or Westchester: These rates apply to trips that go beyond the city limits to Nassau County or Westchester County. Fares might be metered at a different rate or negotiated based on the distance. Negotiated Fare: Fares that are not determined by the meter but are agreed upon by the driver and passenger before the trip begins. This might apply to trips outside the typical service areas or under special circumstances. Group Ride: Some jurisdictions may allow taxis to offer shared rides at a discounted rate. The specifics can vary, including how fares are split among passengers. Other Special Rates/ Unknown: Depending on the local regulations, there might be additional special rates for trips to other specific destinations or under certain conditions (e.g., rush hour rates, holiday rates, etc.). This code might be used for trips where the applicable rate code was not properly recorded or is otherwise unspecified.

We were curious to know why the rate code had such a wide range. Through our research, we found out that Nassau/Westchester's populations were much more wealthy, explaining why some of the fare amounts were so much higher.

This plot was extremely important for understanding more about our killer plot

```{r, echo = FALSE, fig.width=12}
plt <- ggplot(df, aes(x = as.factor(RatecodeID), y = fare_amount)) +
  geom_violin(trim = FALSE, fill = 'skyblue', color = 'blue', alpha = 0.7) +
  stat_summary(fun = median, geom = "point", shape = 23, size = 3, color = "darkred", fill = "yellow") +
  stat_summary(fun = median, geom = "text", aes(label = round(after_stat(y), 2)), vjust = -1, color = "darkgreen") +
  labs(title = "Violin Plot of Fare Amount by Rate Code",
       x = "Rate Code ID",
       y = "Fare Amount ($)") +
  theme_minimal()

suppressWarnings(print(plt))
```

## Plot 3:

Plot3 is a density plot with overlaid lines for both pick-up and drop-off locations, making it easy to compare their distributions. We can see that the most popular pick up and drop off locations are very similar, suggesting important points of interest that people get picked up and dropped off from. This could be airports, famous tourist destinations, etc. The red lines are the pickup locations, and the blue lines are the drop off locations.The density plot provides a visual representation of spatial patterns, offering actionable insights for businesses, city planners, and transportation services to make informed decisions and optimize their operations.

We were wondering what these humps came from, and we figured out that those areas are airports/other high areas of interest.

```{r, echo = FALSE}
# Density plot of pick up and drop off locations
plot(density(df$PULocationID), 
     main = "Density Plot of Pick Up and Drop off Location", 
     xlab = "Location ID", 
     ylab = "Density", 
     ylim = c(0, 0.04), 
     col = "red")
lines(density(df$PULocationID), 
      col = "red", 
      lwd = 2)
par(new = TRUE)
plot(density(df$DOLocationID), main = "", xlab = "", ylab = "", ylim = c(0, 0.04), col = "blue")
lines(density(df$DOLocationID), col = "blue", lwd = 2)
legend("topright", # Position of the legend within the plot area
       legend = c("Pickup Location", "Dropoff Location"), # Text for the legend
       col = c("red", "blue"), # Colors for the legend keys
       lwd = 2) # Line width for the legend keys
```

## Plot4:

Plot4 is a heatmap that can illustrate the concentration of taxi pickups across different times of the day and days of the week. The resulting plot helps in identifying patterns and peak usage periods for taxi services. It can be utilized by taxi service providers for operational optimization, service planning, and targeted marketing based on observed patterns in pickup data.

```{r, echo = FALSE}
# Convert pickup_time to day of the week and hour
df$pickup_day <- weekdays(df$pickup_time)
df$pickup_hour <- hour(df$pickup_time)
# Aggregate data for heatmap
pickup_heatmap_data <- df %>%
  group_by(pickup_day, pickup_hour) %>%
  summarise(Count = n(), .groups = 'drop')
ggplot(pickup_heatmap_data, aes(x = pickup_hour, y = pickup_day, fill = Count)) +
  geom_tile() +
  scale_fill_gradient(low = "lightblue", high = "darkblue") +
  labs(title = "Heatmap of Taxi Pickups by Day of Week and Hour", x = "Hour of the Day", y = "Day of the Week") +
  theme_minimal()
```

## Plot5:

Integrating the insights from the daily number of rides, total fare amounts, and the heatmap of taxi pickups unveils a multifaceted narrative of taxi service dynamics in New York City. The synchronization between the volume of rides and fare accumulation suggests a direct correlation between passenger demand and revenue generation, underpinned by the predictable yet complex patterns of urban mobility. Meanwhile, the heatmap adds depth to this story, highlighting the temporal and geographical nuances of taxi usage. We see a drop in demand for taxi pickup services as a pattern every 7 days, as people are likely to stay home or travel less on the weekends. This is also supported by the matching pattern seen in the other graphs. The heatmap then helps provide further insight in which the count of pickups on Sundays are significantly lower than other week days.

In addition, we see a sharp decrease in fare and pickup amounts in late January and early February. It can be inferred this decrease also occurred due to a sharp decrease in temperature in New York.

Plot8 depicts the matching correlations between fare amount and amount of pickups further enriching understandings of the taxi service landscape.

```{r, echo=FALSE}
df$day <- format(df$pickup_time, "%Y-%m-%d")

# Aggregate for number of rides per day
daily_counts <- df %>%
  group_by(day) %>%
  summarise(NumberOfRides = n(), .groups = 'drop')

# Aggregate for total daily fare
daily_fare_data <- df %>%
  group_by(day) %>%
  summarise(TotalFare = sum(fare_amount), .groups = 'drop')

# Combine both datasets by day
combined_data <- merge(daily_counts, daily_fare_data, by = "day")

# Create the plot
ggplot() +
  geom_line(data = combined_data, aes(x = as.Date(day), y = NumberOfRides, colour = "Number of Rides"), linewidth = 1) +
  geom_line(data = combined_data, aes(x = as.Date(day), y = TotalFare, colour = "Total Fare Amount"), linewidth = 1) +
  scale_y_continuous(name = "Number of Rides", sec.axis = sec_axis(~./max(combined_data$TotalFare) * max(combined_data$NumberOfRides), name = "Total Fare Amount ($)")) +
  labs(title = "Daily Number of Rides and Total Fare Amount",
       x = "Date",
       y = "Number of Rides") +
  theme_minimal() +
  scale_colour_manual("", 
                      breaks = c("Number of Rides", "Total Fare Amount"),
                      values = c("Number of Rides" = "blue", "Total Fare Amount" = "red"))
```

## Plot6:

Plot6 is a bar chart, illustrating the distribution of rides based on the number of passengers, offering insights into common group sizes for travel. Understanding passenger patterns aids in the development of targeted marketing strategies, optimizing user experience, and shaping business policies. Lastly, it offers a data-driven approach to enhance overall service efficiency, resource allocation, and user satisfaction within the transportation industry.

```{r, echo = FALSE}
# Aggregate data by passenger count
passenger_count_data <- df %>%
  group_by(passenger_count) %>%
  summarise(Rides = n(), .groups = 'drop')
ggplot(passenger_count_data, aes(x = factor(passenger_count), y = Rides)) +
  geom_bar(stat = "identity", fill = "orange") +
  labs(title = "Number of Rides by Passenger Count", x = "Passenger Count", y = "Number of Rides") +
  theme_minimal()
```

## Plot7:

Displayed in plot7 is the relationship between tip amounts and total amounts from the dataset. The x-axis represents the tip amounts, and the y-axis represents the total amounts. We can observe a positive correlation corroborating an intuitive relationship that is represented between the total amount of the fare and the tip given. It shows how our data can also be affected

```{r, echo = FALSE}
ggplot(df, aes(x = tip_amount, y = total_amount)) +
  geom_point(color = "purple") +
  labs(title = "Scatter Plot of Tip Amounts vs. Total Amounts", 
       x = "Tip Amount ($)", 
       y = "Total Amount ($)") + 
  theme_minimal()
```

## Plot8:

This plot visualizes the distribution of trip times for rides, focusing on those with a duration of less than 100 minutes. The resulting histogram provides insights into the frequency or count of rides across different trip time intervals. We can see that most of the rides last between 5 and 10 minutes, with a trailing tail for longer rides. The data shows a right-skewed distribution suggesting that most rides have relatively short durations (between 5 and 10 minutes), with fewer rides taking longer durations. This aligns with the common expectation that taxi rides are typically short-distance travels. The truncation at 100 minutes implies a focus on the majority of rides, excluding potential outliers with very long durations.

```{r, echo = FALSE}
trip_time <- df$trip_time[df$trip_time < 100]
hist(trip_time,main = "Histogram of Trip Time",
     xlab = "Trip Time")
```

## Plot9:

The scatter plot below visually represents the relationship between mean fare amounts and the number of passengers in taxi trips. The x-axis represents the passenger count, indicating the number of passengers in a taxi trip. The y-axis represents the mean fare amount, which is the average fare amount for trips with a specific passenger count.By analyzing trends and patterns, this visualization aids in understanding how pricing varies with passenger count. The importance lies in its potential impact on decision-making within the taxi industry, influencing pricing strategies, resource allocation, and overall operational efficiency. Additionally, insights from this analysis can contribute to enhancing customer experience and informing policy and regulation decisions, making it a valuable tool for stakeholders and policymakers alike.

```{r, echo=FALSE}
# Calculate the mean fare amount for each count of passengers
mean_fare <- df %>%
  group_by(passenger_count) %>%
  summarize(mean_fare_amount = mean(fare_amount))
# Scatter plot of mean fare amount vs. passenger count
ggplot(mean_fare, aes(x = as.numeric(passenger_count), y = mean_fare_amount)) +
  geom_point(color = "darkslateblue") +
  geom_text(aes(label = round(mean_fare_amount, 2)), vjust = -0.5, color = "darkseagreen4") +
  labs(title = "Mean Fare Amount vs. Passenger Count", x = "Passenger Count", y = "Mean Fare Amount ($)") +
  scale_x_continuous(breaks = 1:max(as.numeric(mean_fare$passenger_count)), labels = 1:max(as.numeric(mean_fare$passenger_count)))
```

## Plot10:

The analysis of trip time against fare amount typically reveals a positive correlation: as trip time increases, so does the fare amount. This relationship is expected since longer trips, in terms of time, often cover greater distances or encounter traffic conditions that extend the journey, thereby increasing the fare. However, the strength of this relationship can vary significantly across different RateCodeIDs. These plots help for the preperation of the killer plot.

For example, standard rates (RateCodeID 1) usually show a linear increase in fare with time, reflecting a straightforward time-distance-cost relationship. In contrast, flat rates to specific destinations (such as RateCodeID 2 for JFK airport trips) may show less variability in fare with time since the fare is predetermined, irrespective of trip duration. This distinction highlights how different pricing structures (captured by RateCodeID) can affect the fare-time relationship.

Similarly, the relationship between trip distance and fare amount is generally positive, indicating that longer trips cost more. This correlation is a fundamental aspect of fare calculation, typically based on a metered rate per mile or kilometer. However, the influence of RateCodeID on this relationship underscores the complexity of fare calculation beyond mere distance traveled.

For instance, trips under standard metered rates (RateCodeID 1) display a clear linear relationship between distance and fare, as expected. However, for trips with special rate codes, such as those to airports (RateCodeID 2 for JFK, RateCodeID 3 for Newark), the distance-fare relationship might not follow the standard linear pattern due to flat-rate pricing. These special rate codes introduce variations in the distance-fare correlation that are not present under standard metered fares.

There is only one point with a RateCodeID of 6, signaling a group ride. This is just a ride where you share with strangers. Out of the taxi cab rides we took, only one was a group ride. This is most likely because group rides are very difficult to get in a taxi. These can be observed in tables.

```{r, echo = FALSE, fig.align='left', fig.width=13, fig.height=9}
ggplot(df, aes(x = trip_distance, y = fare_amount)) +
  geom_point(aes(color = trip_distance), alpha = 0.5) +
  geom_smooth(method = "lm", formula = y ~ x, se = FALSE, color = "blue") +  
  facet_wrap(~ RatecodeID, scales = "free") +
  labs(title = "Trip Distance vs. Fare Amount by RatecodeID",
       x = "Trip Distance (miles)",
       y = "Fare Amount ($)") +
  theme_minimal() + 
  theme(legend.position = "none")
```

# Secondary Dataset - Central Park Weather

We used a secondary dataset of Central Park Weather that relates to plot 5 to see if we can explain the dip in passengers on the heavy snow day. Although there is a heavy spread of ride counts around when there's 0 inches of snow, we can clearly see that when there's a lot of snow, the ride count drastically deceased.

```{r, echo = FALSE, message = FALSE, warning = FALSE}
df_weather <- read.csv("NYC_Central_Park_weather_1869-2022.csv")
df_weather <- df_weather %>% filter(
  year(DATE) == 2021,
  month(DATE) < 4)

query1 <- "SELECT strftime('%Y-%m-%d', datetime(pickup_time, 'unixepoch')) AS day, COUNT(*) AS count FROM jan_to_mar_taxi_2021 GROUP BY day"
result <- dbSendQuery(dcon, query1)
ride_count_df_weather <- dbFetch(result)
ride_count_df_weather <- ride_count_df_weather %>% rename(DATE = day)

merged_df <- merge(df_weather, ride_count_df_weather, by = "DATE")

# Precipitation vs Ride Count
ggplot(merged_df, aes(x = SNOW, y = count)) +
  geom_point() +  # scatter plot
  geom_smooth(method = "lm", se = FALSE, color = "red") +  # add linear regression line
  labs(x = "Amount of Snow (inches)", y = "Ride Count", title = "Snow vs Ride Count") + 
  theme_minimal()
```

# Killer Plot: Fare Price vs Distance Traveled, RatecodeID, Time of Day

\[Plz fill in\] - Kyle

```{r}
library(grid)
library(gridExtra)
dcon <- dbConnect(SQLite(), dbname = "jan_to_mar_taxi_2021.db")
query <- "SELECT * FROM jan_to_mar_taxi_2021"
ddf <- dbGetQuery(dcon, query)
set.seed(24246452)
sampled_indices <- sample(nrow(ddf), size = 100000)
ddf <- ddf[sampled_indices, ]
ddf$pickup_time <- as.POSIXct(ddf$pickup_time, format = "%m/%d/%Y %I:%M:%S %p")
```

```{r}
plot_grid <- function(data) {
  grid.newpage()
  # Define a larger margin to accommodate axis titles
  vp <- viewport(layout = grid.layout(1, 1), width = 0.8, height = 0.8, x = 0.55, y = 0.5)
  pushViewport(vp)
  
  # Define the range of the data
  x_range <- range(data$trip_distance, na.rm = TRUE)
  y_range <- range(data$fare_amount, na.rm = TRUE)

  # Normalize data for plotting within viewport
  data$norm_trip_distance <- (data$trip_distance - min(x_range)) / (max(x_range) - min(x_range))
  data$norm_fare_amount <- (data$fare_amount - min(y_range)) / (max(y_range) - min(y_range))

  # Define color palette
  ratecode_colors <- rainbow(length(unique(data$RatecodeID)))

  # Map RatecodeID to colors
  color_mapping <- setNames(ratecode_colors, unique(data$RatecodeID))

  # Basic scatter plot
  for (i in unique(data$RatecodeID)) {
    subset_data <- subset(data, RatecodeID == i)
    points <- pointsGrob(subset_data$norm_trip_distance, subset_data$norm_fare_amount,
                         pch = 16, gp = gpar(col = color_mapping[as.character(i)], cex = 0.8))
    grid.draw(points)
  }

  # Manually add axis labels
  x_ticks <- seq(0, 1, length.out = 5)
  y_ticks <- seq(0, 1, length.out = 5)
  x_labels <- round(seq(min(x_range), max(x_range), length.out = 5), 1)
  y_labels <- round(seq(min(y_range), max(y_range), length.out = 5), 1)

  for (i in 1:length(x_ticks)) {
    grid.text(x_labels[i], x = unit(x_ticks[i], "npc"), y = unit(-0.03, "npc"), just = "top")
  }

  for (i in 1:length(y_ticks)) {
    grid.text(y_labels[i], x = unit(-0.05, "npc"), y = unit(y_ticks[i], "npc"), just = "right")
  }
  
  #Legend
  legend_x <- 0.75  # X position of the legend
  legend_y <- 0.9   # Starting Y position of the legend
  legend_size <- 0.02  # Size of legend symbols
  for (i in seq_along(unique(data$RatecodeID))) {
    ratecode <- unique(data$RatecodeID)[i]
    color <- color_mapping[as.character(ratecode)]
    grid.rect(x = unit(legend_x, "npc"), y = unit(legend_y, "npc"), 
              width = unit(legend_size, "npc"), height = unit(legend_size, "npc"), 
              gp = gpar(fill = color, col = color))
    grid.text(paste("RatecodeID", ratecode), x = unit(legend_x + 0.03, "npc"), y = unit(legend_y, "npc"), 
              just = "left")
    legend_y <- legend_y - 0.05  # Adjust Y for next item
  }

  # Labels and titles
  grid.text("Distance (miles)", x = unit(0.5, "npc"), y = unit(-0.1, "npc"), just = "centre")
  grid.text("Fare ($)", x = unit(-0.15, "npc"), y = unit(0.5, "npc"), just = "centre", rot = 90)  # Adjusted position to the left
  grid.text("Fare Analysis by Rate Code ID", x = unit(0.5, "npc"), y = unit(1.05, "npc"), just = "centre")

  popViewport()
}

# Call the plotting function to draw the plot
plot_grid(ddf)
```

# Advanced Questions

Below are a few questions that we have answered and believe are crucial insights that we discovered throughout are work, data wrangling and plot making.

# Question 1: Outlier Explanation

What factors contribute to the decline in ridership observed in late January?

The decline in ridership observed in late January could be attributed to external factors such as sudden weather changes, particularly a freeze, which may not be explicitly captured in the dataset. Severe weather conditions can significantly impact transportation services, leading to a decrease in taxi usage as people opt for alternative modes of transportation or choose to stay indoors.

# Question 2: Effect of Pickup and Dropoff Locations on Fare

How do the pickup and dropoff locations (PULocationID and DOLocationID) affect the fare amount (fare_amount)? Below is a table that showing the first 5 PULocationID and DOLocationID in relation to fare amount:

```{r, echo = FALSE}
# Summarize the effect of pickup and dropoff locations on fare amount
pickup_dropoff_effect <- df %>%
  group_by(PULocationID, DOLocationID) %>%
  summarise(avg_fare_amount = mean(fare_amount),
            total_trips = n(),
            .groups = 'drop')
pickup_dropoff_effect_first_5 <- pickup_dropoff_effect %>%
  slice(1:5)
knitr::kable(pickup_dropoff_effect_first_5, format = "html")
```

# Question 3: Patterns in Taxi Usage Over Time

How does taxi usage, in terms of number of trips and total amount charged (total_amount), vary over different times of the day and days of the week? The first 5 distributions would be as followed:

```{r, echo = FALSE}
taxi_usage <- df %>%
  mutate(hour_of_day = hour(pickup_time),
         day_of_week = wday(pickup_time, label = TRUE)) %>%
  group_by(hour_of_day, day_of_week) %>%
  summarise(num_trips = n(),
            total_amount = sum(total_amount), .groups = 'drop')
taxi_first_5 <- taxi_usage %>%
  slice(1:5)
knitr::kable(taxi_first_5, format = "html")
```

# Question 4: Price Prediction

Can total fares be predicted by distance, theoretical time, and ratecodeIDs? Specifically for 3 different trips: One with 3.5 miles, 20 minutes, in the first ratecode. Another with 4.2 miles, 30 minutes in the second ratecode, and the last with 2.8 miles and 19 minutes in the first ratecode.

```{r, echo = FALSE}
# Price Prediction
price_prediction <- df %>%
  select(total_amount, trip_distance, trip_time, RatecodeID) %>%
  na.omit() %>%
  mutate(RatecodeID = as.factor(RatecodeID)) %>%
  lm(total_amount ~ trip_distance + trip_time + RatecodeID, data = .)


# Prediction for a new dataset (replace new_data with your actual dataset)
new_data <- data.frame(trip_distance = c(3.5, 4.2, 2.8),
                       trip_time = c(20, 30, 19),
                       RatecodeID = factor(c(1, 2, 1)))
# Predict total fares for new data
predictions <- predict(price_prediction, newdata = new_data)
predictions_df <- data.frame(predicted_price = predictions)
knitr::kable(predictions_df, format = "html")
```

# Statistical Modeling

We can see a strong positive correlation between the trip distance and fare amount for the taxis. For every mile increase in the trip distance, the fare amount increases by around \$2.78. We can also see a fixed rate of around \$3.79. The NYC taxi fare is \$3, and costs 70 extra cents per 1/5 mile. We can see that our model is very accurate based on these findings. In addition, the R-squared value is .933, which signifies a strong correlation between the two variables. Due to the large sample size, our error for both the intercept and the slope are very low. The residuals seem to have no noticeable pattern, suggesting that the model is well-fitted to the data. In addition, the QQ plot does not look gaussian, as the upper and lower theoretical quantiles do not follow the sample quantiles.

```{r, echo = FALSE}
x <- df$trip_distance
y <- df$fare_amount

model <- lm(y ~ x)

# Extract coefficients and related statistics
coefficients <- coef(model)
standard_errors <- summary(model)$coefficients[, "Std. Error"]
t_values <- coefficients / standard_errors
p_values <- 2 * pt(abs(t_values), df = df.residual(model), lower.tail = FALSE)

# Extract additional statistics from the model object
residuals <- summary(model)$residuals
r_squared <- summary(model)$r.squared
adj_r_squared <- summary(model)$adj.r.squared
f_value <- summary(model)$fstatistic[1]
f_p_value <- summary(model)$fstatistic[2]
aic <- AIC(model)
bic <- BIC(model)

# Create a data frame to organize all the information
summary_data <- data.frame(
  coefficient = coefficients,
  std_error = standard_errors,
  t_value = t_values,
  p_value = p_values
)

# Additional statistics
summary_stats <- data.frame(
  r_squared = r_squared,
  adj_r_squared = adj_r_squared,
  f_value = f_value,
  f_p_value = f_p_value,
  aic = aic,
  bic = bic
)

quartiles <- quantile(residuals, probs = c(0.25, 0.5, 0.75))

# Residual statistics
summary_residuals <- data.frame(
  mean = mean(residuals),
  sd = sd(residuals),
  min = min(residuals),
  Q1 = quartiles[1],
  median = median(residuals),
  Q3 = quartiles[3],
  max = max(residuals)
)
rownames(summary_residuals) <- "Data"
```

There is an outlier in the yhat below of greater than 400, showing that someone in the taxi cab has had a ride that had a much mor expensive fare amount than usual.

```{r, echo = FALSE}
yhat = fitted(model)
ehat = residuals(model)
plot(yhat, ehat)
abline(h=0)
```

```{r, echo = FALSE}
rhat = rstandard(model)
qqnorm(rhat)
qqline(rhat)
```

# Conclusion

Our comprehensive analysis of NYC taxi patterns from January to March 2021 has provided valuable insights into the dynamics of urban transportation within the city. Through meticulous data cleaning, rigorous statistical analysis, and thoughtful interpretation, we have identified several key findings that not only highlight the behavior of taxi usage but also suggest implications for city planners, taxi operators, and policy makers.

## Key Takeaways

Distance and Fare Relationship: We observed a strong linear relationship between trip distance and fare amount, confirming the expected correlation where longer trips result in higher fares. This foundational understanding assists in fare estimation and regulation, ensuring fair pricing for consumers and equitable compensation for taxi operators.

Temporal Patterns in Taxi Usage: Our analysis revealed distinct patterns in taxi usage throughout the week, with a notable decrease in ride counts on Sundays. This pattern suggests a lower demand for taxis during weekends, possibly due to reduced work-related commuting. Understanding these patterns can help in optimizing taxi fleet management and operational efficiency.

Impact of External Events: We also noted significant dips in taxi usage correlating with external events such as severe weather conditions. This observation underlines the sensitivity of transportation services to environmental factors, which could be crucial for disaster preparedness and emergency response planning.

Geographic Trends: The density plots of pickup and dropoff locations indicated that certain areas, notably major transit hubs and tourist attractions, have higher taxi activity. This data can inform urban development strategies, focusing on improving transportation infrastructure in high-demand areas to enhance accessibility and reduce congestion.

Fare Structure Complexity: The examination of different fare rate codes revealed the complexity of the fare structure in NYC taxis. Special rates for airports and negotiated fares introduce variability in pricing, which can affect customer satisfaction and predictability in travel planning.

**Implications for Stakeholders:**

-   **For City Planners and Policy Makers**: Our findings suggest areas of focus such as improving traffic flow in high-density areas, considering dynamic pricing models for taxis, and enhancing the robustness of the city's transportation infrastructure against environmental impacts.

-   **For Taxi Operators**: There is an opportunity to adjust service availability to align with the demonstrated demand patterns, potentially increasing profitability during peak times and reducing operational costs during off-peak times.

## Conclusion

Further studies could expand on our work by integrating more diverse data sources such as ride-sharing services, public transportation logs, and traffic data to create a more holistic view of urban mobility. Additionally, exploring the impact of socio-economic factors on taxi usage patterns could yield deeper insights into the equity and accessibility of transportation services in New York City.

In conclusion, our project not only sheds light on the current state of taxi usage in New York City but also provides a data-driven foundation for future enhancements in urban transportation planning and policy formulation. As the city evolves, continuous analysis such as ours will be essential in adapting to the changing needs of its residents and visitors.

```{r, echo = FALSE}
on.exit(dbDisconnect(dcon), add = TRUE)
```
