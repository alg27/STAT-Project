---
title: "The Pulse of the City: Unveiling NYC Taxi Patterns - Group 13 Final Project"
author: "Ryan Gan, Alicia Garcia, Alan Yang, Kyle Zeng"
date: '2/15/2024'
format:
  pdf: default
  html: default
pdf-engine: pdflatex
editor: visual
fontsize: 10pt
geometry: margin=1in
toc: true                   
toc-depth: 2  
---


# Introduction

New York, the city that never sleeps, has a densely populated city, meaning not many people can own cars. However, if people need to travel from point A to point B in a hurry, they can hail a Taxi.

Group 13 will be analyzing the Taxi cab ride data from January to June of 2021 to detect any noticeable relationships between the columns of the dataset. For example, the relationship between trip distance and fare price, the most popular destinations to take a Taxi, the average trip time, and so on. In addition, Group 13 will also see if taxicab ride usage spikes during key events or holidays, such as MLK day.

# Plots


```{r, echo = FALSE}
options(bitmapType='cairo')
x11(type='cairo')
```

```{r, echo = FALSE}
library(lubridate)
library(dplyr)
library(ggplot2)
```


#Data cleaning


```{r, echo = FALSE}
df <- read.csv("jan_to_mar_taxi_2021.csv")

#Filters out all values based on some conditions
df <- df %>%
  mutate(
    pickup_time = ymd_hms(tpep_pickup_datetime),
    dropoff_time = mdy_hms(tpep_dropoff_datetime),
    trip_time = as.numeric(difftime(dropoff_time, pickup_time, units = "mins")),
    speed = trip_distance / (trip_time/ 60), # Speed in miles per hour
    fare_per_mile = if_else(trip_distance > 0, fare_amount / trip_distance, NA_real_) # Handle division by zero
  ) %>%
  #filter stuff
  filter(
    month(dropoff_time) < 4,
    year(dropoff_time) == 2021,
    hour(dropoff_time) != 0 & minute(dropoff_time) != 0 & second(dropoff_time) != 0,
    hour(pickup_time) != 0 & minute(pickup_time) != 0 & second(pickup_time) != 0,
    !is.na(pickup_time),
    !is.na(dropoff_time),
    year(pickup_time) == 2021,
    !is.na(fare_per_mile),
    fare_per_mile < 50,
    speed <= 120,
    speed >= .15,
    fare_amount > 0,
    #trip must be longer than 10 seconds
    trip_time > (10/60),
    trip_time < 600,
    extra >= 0,
    mta_tax >= 0,
    tip_amount >= 0,
    tolls_amount >= 0,
    improvement_surcharge >= 0,
    congestion_surcharge >= 0,
    total_amount >= 0,
    passenger_count < 20,
    passenger_count > 0
  )
```


# Plot 1 Trip Distance vs Fare Amount

For this plot, we are examining the relationship between the trip distance and the amount the person got charged for their fare. We can see as the trip distance increases, the fare amount increases as well.


```{r, echo = FALSE}
# Scatter plot of Trip Distance vs. Fare Amount
trip_distance <- df$trip_distance
fare_amount <- df$fare_amount
plot(trip_distance, fare_amount, 
     sub = "Trip Distance vs. Fare Amount",
     xlab = "Trip Distance", 
     ylab = "Fare Amount")
```


# Plot 2 Histogram of Trip Time

This plot shows the distribution of trip times for all of the rides. We can see that most of the rides last between 5 and 10 minutes, with a trailing tail for longer rides. This data is right skewed, which makes sense considering that people usually hail a taxi to go a few miles.


```{r, echo = FALSE}
# Histogram of Trip Times less than 100 minutes for ease of viewing
trip_time <- df$trip_time[df$trip_time < 100]
hist(trip_time,
     xlab = "Trip Time")
```


# Plot 3 Boxplot of average speed

This plot shows the average speed of the taxi driver over their trip. We can see that the taxi drivers usually drive between 15 and 17 miles per hour. However, there are a lot of outliers due to the 4 million points we have, and these are most likely caused by timing issues or incredibly short rides that cause the speed to seem very high (the taxi driver might have forgotten to start the time well into the trip)


```{r, echo = FALSE}
# Box plot of speed
boxplot(df$speed, ylab = "speed")
```


# Plot 4 Pie Chart of Payment Method

This pllot shows the different payment methods that customers used for the taxi. We can see that the majority of people (\~60%) paid for their trip with card with nearly the rest paying in cash. Very little people had no charge or disputed the payment.


```{r, echo = FALSE}
# Pie Chart of payment methods
df_grouped_payments <- df %>% group_by(df$payment_type) %>% summarise(payment_total = sum(payment_type))
df_grouped_payments <- df_grouped_payments %>% filter(row_number() <= n()-1)
labels <- c("Credit Card","Cash","No Charge","Dispute")
pie(df_grouped_payments$payment_total, labels = labels, main = "How the Passengers Paid for the Trip")
```


#Plot 5 Density of Pick up and Drop off location

Below is the density plot of where most of the pick up and drop off locations are. We can see that the most popular pick up and drop off locations are very similar, suggesting important points of interest that people get picked up and dropped off from. This could be airports, famous tourist destinations, etc.


```{r, echo = FALSE}
# Density plot of pick up and drop off locations
plot(density(df$PULocationID), 
     main = "Density Plot of Pick Up and Drop off Location", 
     xlab = "Location ID", 
     ylab = "Density", 
     ylim = c(0, 0.04), 
     col = "red")
lines(density(df$PULocationID), 
      col = "red", 
      lwd = 2)
par(new = TRUE)
plot(density(df$DOLocationID), 
     main = "", 
     xlab = "", 
     ylab = "", 
     ylim = c(0, 0.04), 
     col = "blue")
lines(density(df$DOLocationID), 
      col = "blue", 
      lwd = 2)


```


# Plot 6 Line Graph of Number of Rides Per Day

This plot shows the total number of rides per day between Jan and Mar. We can see that there is a consistent dip in the number of rides around every 6 days, mostly on Sunday's, implying that people stay at home or don't travel as much on the weekends in New York.


```{r, echo = FALSE}
# Line chart of month and number of taxi trips
# Assuming df is your dataframe and tpe_pickup_datetime is the column with dates
df$day <- format(df$pickup_time, "%Y-%m-%d")

# Sort the data by day to ensure it's in chronological order
daily_counts <- aggregate(x = list(Count = rep(1, nrow(df))), by = list(Day = df$day), FUN = sum)
# Plot
max_count <- max(daily_counts$Count)

# Plotting with y-axis starting at 0
plot(daily_counts$Count, type = "l", xaxt = "n", ylim = c(0, max_count), main = "Number of Rides per day", xlab = "Day", ylab = "Number of Rides"); axis(1, at = 1:length(daily_counts$Day), labels = daily_counts$Month)

```


# Plot 7 Relationship Between Tip and Total Amount

Displayed below is the relationship between tip amounts and total amounts from the dataset. This is usefule because we are able to see if there's a correlation between the tip amount and the total amount of a transaction.


```{r, echo = FALSE}
library(ggplot2)
ggplot(df, aes(x = tip_amount, y = total_amount)) +
  geom_point(color = "purple") +
  labs(title = "Scatter Plot of Tip Amounts vs. Total Amounts", 
       x = "Tip Amount ($)", 
       y = "Total Amount ($)") + 
  theme_minimal()

```


# Plot 8 Heat Map of Taxi Pickups by Day of Week and Hour
A heatmap can illustrate the concentration of taxi pickups across different times of the day and days of the week. This visualization helps identify peak taxi usage periods.


```{r, echo = FALSE}
# Convert pickup_time to day of the week and hour
df$pickup_day <- weekdays(df$pickup_time)
df$pickup_hour <- hour(df$pickup_time)

# Aggregate data for heatmap
pickup_heatmap_data <- df %>%
  group_by(pickup_day, pickup_hour) %>%
  summarise(Count = n(), .groups = 'drop')

ggplot(pickup_heatmap_data, aes(x = pickup_hour, y = pickup_day, fill = Count)) +
  geom_tile() +
  scale_fill_gradient(low = "lightblue", high = "darkblue") +
  labs(title = "Heatmap of Taxi Pickups by Day of Week and Hour", x = "Hour of the Day", y = "Day of the Week") +
  theme_minimal()
```


# Plot 9 Number of Rides by Passenger Count
A bar chart can show the distribution of rides by the number of passengers, providing insight into common travel group sizes.

```{r, echo = FALSE}
# Aggregate data by passenger count
passenger_count_data <- df %>%
  group_by(passenger_count) %>%
  summarise(Rides = n(), .groups = 'drop')

ggplot(passenger_count_data, aes(x = factor(passenger_count), y = Rides)) +
  geom_bar(stat = "identity", fill = "orange") +
  labs(title = "Number of Rides by Passenger Count", x = "Passenger Count", y = "Number of Rides") +
  theme_minimal()
```


# Plot 10  Daily Total Fare Amount
A time series plot of daily total fare amounts can highlight trends, including days of high or low earnings, and the impact of specific events or holidays.

```{r, echo = FALSE}
# Aggregate data for total daily fare
daily_fare_data <- df %>%
  group_by(day) %>%
  summarise(TotalFare = sum(fare_amount), .groups = 'drop')

ggplot(daily_fare_data, aes(x = as.Date(day), y = TotalFare)) +
  geom_line(color = "darkred") +
  labs(title = "Daily Total Fare Amount", x = "Date", y = "Total Fare Amount ($)") +
  theme_minimal()
```


# Plot 11 Violin Plot of Fare Amount by Rate Code
A violin plot can be useful to compare the distribution of fare amounts across different rate codes. 
Rate Code IDs:
1. Standard rate 
2. JFK 
3. Newark 
4. Nassau or Westchester 
5. Negotiated fare 
6. Group ride 
99. Unknown

```{r, echo = FALSE}
ggplot(df, aes(x = as.factor(RatecodeID), y = fare_amount)) +
  geom_violin(trim = FALSE, fill = 'skyblue', color = 'blue', alpha = 0.7) +
  stat_summary(fun = median, geom = "point", shape = 23, size = 3, color = "darkred", fill = "yellow") +
  stat_summary(fun = median, 
               geom = "text", 
               aes(label = round(after_stat(y), 2)), 
               vjust = -1, color = "darkgreen") +
  labs(title = "Violin Plot of Fare Amount by Rate Code",
       x = "Rate Code ID",
       y = "Fare Amount ($)") +
  theme_minimal()
```


# Plot 12 Faceted Histogram of Trip Distance by Passenger Count
This plot will show the distribution of trip distances, faceted by the number of passengers in the taxi. This can reveal differences in trip distances depending on whether passengers are traveling alone or in a group.


```{r, echo = FALSE}
ggplot(df, aes(x = trip_distance)) +
  geom_histogram(bins = 30, fill = 'lightgreen', color = 'black') +
  facet_wrap(~passenger_count, scales = 'free_x') +
  labs(title = "Histogram of Trip Distance by Passenger Count",
       x = "Trip Distance (miles)",
       y = "Count") +
  theme_minimal()
```


# Statistical Modeling

We can see a strong positive correlation between the trip distance and fare amount for the taxis. For every mile increase in the trip distance, the fare amount increases by around \$2.78. We can also see a fixed rate of around \$3.79. The NYC taxi fare is \$3, and costs 70 extra cents per 1/5 mile. We can see that our model is very accurate based on these findings. In addition, the R-squared value is .933, which signifies a strong correlation between the two variables. Due to the large sample size, our error for both the intercept and the slope are very low. The residuals seem to have no noticeable pattern, suggesting that the model is well-fitted to the data. In addition, the QQ plot seems gaussian, revealing linearity.


```{r, echo = FALSE}
x <- df$trip_distance
y <- df$fare_amount

linear_model <- lm(y ~ x)
summary(linear_model)
```

```{r, echo = FALSE}
yhat = fitted(linear_model)
ehat = residuals(linear_model)

plot(yhat, ehat)
abline(h=0)
```

```{r, echo = FALSE}
rhat = rstandard(linear_model)
qqnorm(rhat)
qqline(rhat)
```

