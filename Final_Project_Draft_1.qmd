---
title: "The Pulse of the City: Unveiling NYC Taxi Patterns - Group 13 Final Project"
author: "Ryan Gan, Alicia Garcia, Alan Yang, Kyle Zeng"
date: '2/29/2024'
format:
  pdf: default
editor: visual
fontsize: 10pt
geometry: margin=1in
toc: true                   
toc-depth: 2  
---

# Introduction

New York, the city that never sleeps, has a densely populated city, meaning not many people can own cars. However, if people need to travel from point A to point B in a hurry, they can hail a Taxi.

Group 13 will be analyzing the Taxi cab ride data from January to June of 2021 to detect any noticeable relationships between the columns of the dataset. For example, the relationship between trip distance and fare price, the most popular destinations to take a Taxi, the average trip time, and so on. In addition, Group 13 will also see if taxicab ride usage spikes during key events or holidays, such as MLK day.

# Plots

```{r, echo = FALSE, message = FALSE, warning = FALSE}
options(bitmapType='cairo')
x11(type='cairo')
```

```{r, echo = FALSE, message = FALSE, warning = FALSE}
library(lubridate)
library(dplyr)
library(ggplot2)
```

#Data cleaning

```{r, echo = FALSE, message = FALSE, warning = FALSE}
df <- read.csv("jan_to_mar_taxi_2021.csv")

#Filters out all values based on some conditions
df <- df %>%
  mutate(
    pickup_time = ymd_hms(tpep_pickup_datetime),
    dropoff_time = mdy_hms(tpep_dropoff_datetime),
    trip_time = as.numeric(difftime(dropoff_time, pickup_time, units = "mins")),
    speed = trip_distance / (trip_time/ 60), # Speed in miles per hour
    fare_per_mile = if_else(trip_distance > 0, fare_amount / trip_distance, NA_real_) # Handle division by zero
  ) %>%
  #filter stuff
  filter(
    month(dropoff_time) < 4,
    year(dropoff_time) == 2021,
    hour(dropoff_time) != 0 & minute(dropoff_time) != 0 & second(dropoff_time) != 0,
    hour(pickup_time) != 0 & minute(pickup_time) != 0 & second(pickup_time) != 0,
    !is.na(pickup_time),
    !is.na(dropoff_time),
    year(pickup_time) == 2021,
    !is.na(fare_per_mile),
    fare_per_mile < 50,
    speed <= 120,
    speed >= .15,
    fare_amount > 0,
    #trip must be longer than 10 seconds
    trip_time > (10/60),
    trip_time < 600,
    extra >= 0,
    mta_tax >= 0,
    tip_amount >= 0,
    tolls_amount >= 0,
    improvement_surcharge >= 0,
    congestion_surcharge >= 0,
    total_amount >= 0,
    passenger_count < 20,
    passenger_count > 0
  )
```

```{r, echo = FALSE}
sampled_indices <- sample(nrow(df), size = 100000)

# Subset the DataFrame with the sampled indices
df <- df[sampled_indices, ]
```

# Plot 1 Trip Distance vs Fare Amount

For this plot, we are examining the relationship between the trip distance and the amount the person got charged for their fare using a scatterplot. We can see as the trip distance increases, the fare amount increases as well. This reveals a strong linear relationship between trip distance and fare amount.This suggests that there is a positive correlation between trip distance and fare amount. In other words, longer trips tend to result in higher fare amounts. The scatter plot provides a quick and intuitive way to observe the trend and relationship between these two variables.

```{r, echo = FALSE}
# Scatter plot of Trip Distance vs. Fare Amount
trip_distance <- df$trip_distance
fare_amount <- df$fare_amount
plot(trip_distance, fare_amount, 
     main = "Trip Distance vs. Fare Amount",
     xlab = "Trip Distance", 
     ylab = "Fare Amount")
```

# Plot 2 Histogram of Trip Time

This plot visualizes the distribution of trip times for rides, focusing on those with a duration of less than 100 minutes. The resulting histogram provides insights into the frequency or count of rides across different trip time intervals. We can see that most of the rides last between 5 and 10 minutes, with a trailing tail for longer rides. The data shows a right-skewed distribution suggesting that most rides have relatively short durations (between 5 and 10 minutes), with fewer rides taking longer durations. This aligns with the common expectation that taxi rides are typically short-distance travels. The truncation at 100 minutes implies a focus on the majority of rides, excluding potential outliers with very long durations.

```{r, echo = FALSE}
# Histogram of Trip Times less than 100 minutes for ease of viewing
trip_time <- df$trip_time[df$trip_time < 100]
hist(trip_time,main = "Histogram of Trip Time",
     xlab = "Trip Time")
```

# Plot 3 Pie Chart of Payment Method

The pie chart is visualizing the proportion of different payment methods used by taxi passengers.The colors, labels, and percentages provide information about the distribution We can see that the majority of people (\\\~60%) paid for their trip with card with nearly the rest paying in cash. Very little people had no charge or disputed the payment.This kind of visualization can be valuable for understanding customer behavior, informing business decisions, and communicating insights to stakeholders.

```{r, echo = FALSE}
library(scales)

# Pie Chart of payment methods
df_grouped_payments <- df %>% group_by(df$payment_type) %>% summarise(payment_total = sum(payment_type))
df_grouped_payments <- df_grouped_payments %>% filter(row_number() <= n()-1)
labels <- c("Credit Card","Cash","No Charge","Dispute")

# Calculate percentages
percentages <- percent(df_grouped_payments$payment_total / sum(df_grouped_payments$payment_total))

# Create pie chart
pie(df_grouped_payments$payment_total, labels = paste(labels, "\n", percentages),col = c("coral", "cornflowerblue", "chartreuse3", "red"), main = "How the Passengers Paid for the Trip")

```

# Plot 4 Density of Pick up and Drop off location

Below is a density plot with overlaid lines for both pick-up and drop-off locations, making it easy to compare their distributions. We can see that the most popular pick up and drop off locations are very similar, suggesting important points of interest that people get picked up and dropped off from. This could be airports, famous tourist destinations, etc. The red lines are the pickup locations, and the blue lines are the drop off locations.The density plot provides a visual representation of spatial patterns, offering actionable insights for businesses, city planners, and transportation services to make informed decisions and optimize their operations.

```{r, echo = FALSE}
# Density plot of pick up and drop off locations
plot(density(df$PULocationID), main = "Density Plot of Pick Up and Drop off Location", xlab = "Location ID", ylab = "Density", ylim = c(0, 0.04), col = "red")
lines(density(df$PULocationID), col = "red", lwd = 2)
par(new = TRUE)
plot(density(df$DOLocationID), main = "", xlab = "", ylab = "", ylim = c(0, 0.04), col = "blue")
lines(density(df$DOLocationID), col = "blue", lwd = 2)
legend("topright", # Position of the legend within the plot area
       legend = c("Pickup Location", "Dropoff Location"), # Text for the legend
       col = c("red", "blue"), # Colors for the legend keys
       lwd = 2) # Line width for the legend keys
```

# Plot 5 Line Graph of Number of Rides Per Day

This plot shows the total number of rides per day between Jan and Mar. The purpose of this code is to visualize the trend in the number of taxi rides per day in New York City between January and March. We have observed a consistent dip in the number of rides around every 6 days, especially on Sundays, suggesting a pattern of reduced taxi usage on weekends. This implies that people tend to stay at home or travel less on Sundays in New York during the specified time period.

```{r, echo = FALSE}
# Line chart of month and number of taxi trips
# Assuming df is your dataframe and tpe_pickup_datetime is the column with dates
df$day <- format(df$pickup_time, "%Y-%m-%d")

# Sort the data by day to ensure it's in chronological order
daily_counts <- aggregate(x = list(Count = rep(1, nrow(df))), by = list(Day = df$day), FUN = sum)
# Plot
max_count <- max(daily_counts$Count)

# Plotting with y-axis starting at 0
plot(daily_counts$Count, type = "l", xaxt = "n", ylim = c(0, max_count), main = "Number of Rides per day", xlab = "Day", ylab = "Number of Rides"); axis(1, at = 1:length(daily_counts$Day), labels = daily_counts$Month)

```

```{r, echo = FALSE}
library(ggplot2)
```

# Plot 6 Relationship Between Tip and Total Amount

Displayed below is the relationship between tip amounts and total amounts from the dataset. The x-axis represents the tip amounts, and the y-axis represents the total amounts. We can observe a positive correlation corroborating an intuitive relationship that is represented between the total amount of the fare and the tip given.

```{r, echo = FALSE}
ggplot(df, aes(x = tip_amount, y = total_amount)) +
  geom_point(color = "purple") +
  labs(title = "Scatter Plot of Tip Amounts vs. Total Amounts", 
       x = "Tip Amount ($)", 
       y = "Total Amount ($)") + 
  theme_minimal()
```

#Plot 7 Tip amounts during different times of day

Below is a bar plot reveals average tip amounts during different times of the day (based on dropoff time). Late night is between 12:00am and 4:00am. Early morning is between 4:00am and 8:00am. Morning to midday is between 8:00am and 12:00pm. Afternoon is between 12:00pm and 4:00pm. Evening rush is between 4:00pm and 8:00pm, and night is between 8:00pm and 12:00am. The plot illustrates that people tend to tip more generously in the evening rush and nighttime periods. The visualization is aesthetically presented with minimal styling and a Pastel1 color palette. Overall, the code and resulting visualization offer valuable insights into the variation of average tip amounts across different time intervals based on taxi drop off times.

```{r}
df$tpep_dropoff_datetime <- as.POSIXct(df$tpep_dropoff_datetime, format="%m/%d/%Y %I:%M:%S %p")
df$time_of_day <- cut(hour(df$tpep_dropoff_datetime),
                      breaks=c(-Inf, 4, 8, 12, 16, 20, 24),
                      labels=c("Late Night", "Early Morning", "Morning to Midday", "Afternoon", "Evening Rush", "Night"),
                      right=FALSE)
average_tips <- df %>%
  group_by(time_of_day) %>%
  summarise(average_tip = mean(tip_amount, na.rm = TRUE))

ggplot(average_tips, aes(x=time_of_day, y=average_tip, fill=time_of_day)) +
  geom_col() +
  labs(title="Average Tip Amount by Time of Day",
       x="Time of Day", y="Average Tip Amount") +
  theme_minimal() +
  scale_fill_brewer(palette="Pastel1") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10)) # 
```

# Plot 8 Heat Map of Taxi Pickups by Day of Week and Hour

Below is a heatmap that can illustrate the concentration of taxi pickups across different times of the day and days of the week. The resulting plot helps in identifying patterns and peak usage periods for taxi services. It can be utilized by taxi service providers for operational optimization, service planning, and targeted marketing based on observed patterns in pickup data.

```{r, echo = FALSE}
# Convert pickup_time to day of the week and hour
df$pickup_day <- weekdays(df$pickup_time)
df$pickup_hour <- hour(df$pickup_time)
# Aggregate data for heatmap
pickup_heatmap_data <- df %>%
  group_by(pickup_day, pickup_hour) %>%
  summarise(Count = n(), .groups = 'drop')
ggplot(pickup_heatmap_data, aes(x = pickup_hour, y = pickup_day, fill = Count)) +
  geom_tile() +
  scale_fill_gradient(low = "lightblue", high = "darkblue") +
  labs(title = "Heatmap of Taxi Pickups by Day of Week and Hour", x = "Hour of the Day", y = "Day of the Week") +
  theme_minimal()
```

# Plot 9 Number of Rides by Passenger Count

Below is a bar chart, illustrating the distribution of rides based on the number of passengers, offering insights into common group sizes for travel. Understanding passenger patterns aids in the development of targeted marketing strategies, optimizing user experience, and shaping business policies. Lastly, it offers a data-driven approach to enhance overall service efficiency, resource allocation, and user satisfaction within the transportation industry.

```{r, echo = FALSE}
# Aggregate data by passenger count
passenger_count_data <- df %>%
  group_by(passenger_count) %>%
  summarise(Rides = n(), .groups = 'drop')
ggplot(passenger_count_data, aes(x = factor(passenger_count), y = Rides)) +
  geom_bar(stat = "identity", fill = "orange") +
  labs(title = "Number of Rides by Passenger Count", x = "Passenger Count", y = "Number of Rides") +
  theme_minimal()
```

# Plot 10 Daily Total Fare Amount

Below is a time series plot using ggplot2 to visualize the daily total fare amounts. It first aggregates the data by day, calculating the sum of fare amounts for each day. The resulting plot depicts the trend in total fare amounts over time, with dates on the x-axis and total fare amounts on the y-axis.This visualization is valuable for discerning patterns, trends, and potential correlations with external events or holidays, offering insights into the overall performance of a transportation system.

```{r, echo = FALSE}
# Aggregate data for total daily fare
daily_fare_data <- df %>%
  group_by(day) %>%
  summarise(TotalFare = sum(fare_amount), .groups = 'drop')
ggplot(daily_fare_data, aes(x = as.Date(day), y = TotalFare)) +
  geom_line(color = "darkred") +
  labs(title = "Daily Total Fare Amount", x = "Date", y = "Total Fare Amount ($)") +
  theme_minimal()
```

# Plot 11 Violin Plot of Fare Amount by Rate Code

Below is a violin plot used to visually compare fare distributions across different rate codes. This plot is essential for identifying patterns, outliers, and skewness in fare amounts. The inclusion of median points and labels highlights central tendencies within each rate code. Beyond analysis, the plot serves as a clear communication tool, aiding stakeholders in making informed decisions related to pricing strategies and operational planning based on observed fare variations. Rate Code IDs: 1. Standard rate 2. JFK 3. Newark 4. Nassau or Westchester 5. Negotiated fare 6. Group ride 99. Unknown

```{r, echo = FALSE}
ggplot(df, aes(x = as.factor(RatecodeID), y = fare_amount)) +
  geom_violin(trim = FALSE, fill = 'skyblue', color = 'blue', alpha = 0.7) +
  stat_summary(fun = median, geom = "point", shape = 23, size = 3, color = "darkred", fill = "yellow") +
  stat_summary(fun = median, hjust = 1.3, 
               geom = "text", 
               aes(label = round(after_stat(y), 2)), 
               vjust = -1, color = "darkgreen") +
  labs(title = "Violin Plot of Fare Amount by Rate Code",
       x = "Rate Code ID",
       y = "Fare Amount ($)") +
  theme_minimal()
```

# Plot 12 Scatterplot of Trip Time and Total Amount

Below is a scatterplot that is depicting the relationship between taxi trip duration and total amount charged. Each point on the plot represents a specific trip, with the x-coordinate indicating the duration and the y-coordinate showing the total amount charged. The use of blue color enhances visibility. Analyzing the plot can reveal insights into how total charges vary with trip duration, identifying patterns or outliers in the dataset. This visualization is valuable for exploring underlying patterns in taxi trip data and potentially providing insights into factors influencing fare pricing or revenue generation in taxi services.

```{r, echo = FALSE}
ggplot(df, aes(x = trip_time, y = total_amount)) +
  geom_point(color = "deepskyblue3") +
  labs(title = "Total Amount Over Trip Duration", x = "Trip Duration", y = "Total Amount ($)")
```

#Plot 13 Scatter plot between mean fare amount and passenger count

The scatter plot below visually represents the relationship between mean fare amounts and the number of passengers in taxi trips. The x-axis represents the passenger count, indicating the number of passengers in a taxi trip. The y-axis represents the mean fare amount, which is the average fare amount for trips with a specific passenger count.By analyzing trends and patterns, this visualization aids in understanding how pricing varies with passenger count. The importance lies in its potential impact on decision-making within the taxi industry, influencing pricing strategies, resource allocation, and overall operational efficiency. Additionally, insights from this analysis can contribute to enhancing customer experience and informing policy and regulation decisions, making it a valuable tool for stakeholders and policymakers alike.

```{r}
# Calculate the mean fare amount for each count of passengers
mean_fare <- df %>%
  group_by(passenger_count) %>%
  summarize(mean_fare_amount = mean(fare_amount))
# Scatter plot of mean fare amount vs. passenger count
ggplot(mean_fare, aes(x = as.numeric(passenger_count), y = mean_fare_amount)) +
  geom_point(color = "darkslateblue") +
  geom_text(aes(label = round(mean_fare_amount, 2)), vjust = -0.5, color = "darkseagreen4") +
  labs(title = "Mean Fare Amount vs. Passenger Count", x = "Passenger Count", y = "Mean Fare Amount ($)") +
  scale_x_continuous(breaks = 1:max(as.numeric(mean_fare$passenger_count)), labels = 1:max(as.numeric(mean_fare$passenger_count)))
```

# Statistical Modeling

We can see a strong positive correlation between the trip distance and fare amount for the taxis. For every mile increase in the trip distance, the fare amount increases by around \$2.78. We can also see a fixed rate of around \$3.79. The NYC taxi fare is \$3, and costs 70 extra cents per 1/5 mile. We can see that our model is very accurate based on these findings. In addition, the R-squared value is .933, which signifies a strong correlation between the two variables. Due to the large sample size, our error for both the intercept and the slope are very low. The residuals seem to have no noticeable pattern, suggesting that the model is well-fitted to the data. In addition, the QQ plot does not look gaussian, as the upper and lower theoretical quantiles do not follow the sample quantiles.

```{r, echo = FALSE}
x <- df$trip_distance
y <- df$fare_amount
linear_model <- lm(y ~ x)
summary(linear_model)
```

```{r, echo = FALSE}
yhat = fitted(linear_model)
ehat = residuals(linear_model)
plot(yhat, ehat)
abline(h=0)
```

```{r, echo = FALSE}
rhat = rstandard(linear_model)
qqnorm(rhat)
qqline(rhat)
```

# Advanced Questions

Below are a few questions that we have answered and believe are crucial insights that we discovered throughout are work, data wrangling and plot making. 

# Question 1: Outlier Explanation

What factors contribute to the decline in ridership observed in late January?

In January, there was a winter storm in New York that shut everything down. This caused a lot of people to stay in doors.

# Question 2: Effect of Pickup and Dropoff Locations on Fare

How do the pickup and dropoff locations (PULocationID and DOLocationID) affect the fare amount (fare_amount)? 

```{r}

```

# Question 3: Patterns in Taxi Usage Over Time

How does taxi usage, in terms of number of trips and total amount charged (total_amount), vary over different times of the day and days of the week?

```{r}

```
