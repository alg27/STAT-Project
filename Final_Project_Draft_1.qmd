---
title: "The Pulse of the City: Unveiling NYC Taxi Patterns - Group 13 Final Project"
author: "Ryan Gan, Alicia Garcia, Alan Yang, Kyle Zeng"
date: '2/15/2024'
format:
  pdf: default
  html: default
pdf-engine: pdflatex
editor: visual
fontsize: 10pt
geometry: margin=1in
toc: true                   
toc-depth: 2  
---

# Introduction

New York, the city that never sleeps, has a densely populated city, meaning not many people can own cars. However, if people need to travel from point A to point B in a hurry, they can hail a Taxi.

Group 13 will be analyzing the Taxi cab ride data from January to June of 2021 to detect any noticeable relationships between the columns of the dataset. For example, the relationship between trip distance and fare price, the most popular destinations to take a Taxi, the average trip time, and so on. In addition, Group 13 will also see if taxicab ride usage spikes during key events or holidays, such as MLK day.

# Plots

```{r}
options(bitmapType='cairo')
x11(type='cairo')
```

```{r}
library(lubridate)
library(dplyr)
```

```{r}
df <- read.csv("jan_to_mar_taxi_2021.csv")

#Filters out all values based on some conditions
df <- df %>%
  mutate(
    pickup_time = ymd_hms(tpep_pickup_datetime),
    dropoff_time = mdy_hms(tpep_dropoff_datetime),
    trip_time = as.numeric(difftime(dropoff_time, pickup_time, units = "mins")),
    speed = trip_distance / (trip_time/ 60), # Speed in miles per hour
    fare_per_mile = if_else(trip_distance > 0, fare_amount / trip_distance, NA_real_) # Handle division by zero
  ) %>%
  #filter stuff
  filter(
    month(dropoff_time) < 4,
    year(dropoff_time) == 2021,
    !is.na(pickup_time),
    !is.na(dropoff_time),
    year(pickup_time) == 2021,
    !is.na(fare_per_mile),
    fare_per_mile < 50,
    speed <= 120,
    speed >= .15,
    fare_amount > 0,
    #trip must be longer than 10 seconds
    trip_time > (10/60),
    trip_time < 600,
    extra >= 0,
    mta_tax >= 0,
    tip_amount >= 0,
    tolls_amount >= 0,
    improvement_surcharge >= 0,
    congestion_surcharge >= 0,
    total_amount >= 0,
    passenger_count <20
  )
```
# Plot 1
For this plot, we are examining the relationship between the trip distance and the amount the person got charged for their fare. We can see as the trip distance increases, the fare amount increases as well.
```{r}
# Scatter plot of Trip Distance vs. Fare Amount
trip_distance <- df$trip_distance
fare_amount <- df$fare_amount
plot(trip_distance, fare_amount)
```


# Plot 2

This plot shows the distribution of trip times for all of the rides. We can see that most of the rides last between 5 and 10 minutes, with a trailing tail for longer rides. This data is right skewed, which makes sense considering that people usually hail a taxi to go a few miles. 
```{r}
# Histogram of Trip Times less than 100 minutes for ease of viewing
trip_time <- df$trip_time[df$trip_time < 100]
hist(trip_time)
```
# Plot 3 

This plot shows the average speed of the taxi driver over their trip. We can see that the taxi drivers usually drive between 15 and 17 miles per hour. However, there are a lot of outliers due to the 4 million points we have, and these are most likely caused by timing issues or incredibly short rides that cause the speed to seem very high (the taxi driver might have forgotten to start the time well into the trip)
```{r}
# Box plot of speed
boxplot(df$speed)
```

# Plot 4

This pllot shows the different payment methods that customers used for the taxi. We can see that the majority of people (~60%) paid for their trip with card with nearly the rest paying in cash. Very little people had no charge or disputed the payment. 

```{r}
# Pie Chart of payment methods
df_grouped_payments <- df %>% group_by(df$payment_type) %>% summarise(payment_total = sum(payment_type))
df_grouped_payments <- df_grouped_payments %>% filter(row_number() <= n()-1)
labels <- c("Credit Card","Cash","No Charge","Dispute")
pie(df_grouped_payments$payment_total, labels = labels, main = "How the Passengers Paid for the Trip")
```

#Plot 5

Below is the density plot of where most of the pick up and drop off locations are. We can see that the most popular pick up and drop off locations are very similar, suggesting important points of interest that people get picked up and dropped off from. This could be airports, famous tourist destinations, etc. 

```{r}
# Density plot of pick up and drop off locations
plot(density(df$PULocationID), main = "Density Plot of Pick Up and Drop off Location", xlab = "Location ID", ylab = "Density", ylim = c(0, 0.04), col = "red")
lines(density(df$PULocationID), col = "red", lwd = 2)
par(new = TRUE)
plot(density(df$DOLocationID), main = "", xlab = "", ylab = "", ylim = c(0, 0.04), col = "blue")
lines(density(df$DOLocationID), col = "blue", lwd = 2)
```

# Plot 6

This plot shows the toal number of rides per month for Jan, Feb, and Mar. We can see that there were a lot more rides in March, suggesting that tourists may come visit New York in the spring, causing more taxicab rides to happen.  
```{r}
# Line chart of month and number of taxi trips
# Assuming df is your dataframe and tpe_pickup_datetime is the column with dates
df$tpep_pickup_datetime <- as.POSIXct(df$tpep_pickup_datetime, format = "%Y-%m-%d %H:%M:%S", tz = "UTC")

# Check if there are any NA values after conversion, which indicate parsing issues
sum(is.na(df$tpep_pickup_datetime))


# Extract month as a separate column
df$month <- format(df$tpep_pickup_datetime, "%m")

# Sort the data by month to ensure it's in chronological order
monthly_counts <- aggregate(x = list(Count = rep(1, nrow(df))), by = list(Month = df$month), FUN = sum)
# Plot
max_count <- max(monthly_counts$Count)

# Plotting with y-axis starting at 0
plot(monthly_counts$Count, type = "l", xaxt = "n", ylim = c(0, max_count), main = "Number of Rides per Month", xlab = "Month", ylab = "Number of Rides")
axis(1, at = 1:length(monthly_counts$Month), labels = monthly_counts$Month)

```

# Statistical Modeling

We can see a strong positive correlation between the trip distance and fare amount for the taxis. For every mile increase in the trip distance, the fare amount increases by around \$2.78. We can also see a fixed rate of around \$3.79. The NYC taxi fare is $3, and costs 70 extra cents per 1/5 mile. We can see that our model is very accurate based on these findings. In addition, the R-squared value is .933, which signifies a strong correlation between the two variables. Due to the large sample size, our error for both the intercept and the slope are very low. 

```{r}
x <- df$trip_distance
y <- df$fare_amount

linear_model <- lm(y ~ x)
summary(linear_model)
```

